}
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
showLR <- function(X,Y){
#library("lattice")
dat <- data.frame( x=X, y=Y, gp=1 )
xyplot( y ~ x, dat, group=gp, type='b' )
}
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
x <- seq(pi/4, 5 * pi, length.out = 100)
y <- seq(pi/4, 5 * pi, length.out = 100)
r <- as.vector(sqrt(outer(x^2, y^2, "+")))
grid <- expand.grid(x=x, y=y)
grid$z <- cos(r^2) * exp(-r/(pi^3))
levelplot(z~x*y, grid,
panel = function(...){
panel.levelplot(...)
panel.abline(h = 2.5)
panel.abline(v = 2.5)
},
cuts = 50, scales=list(log="e"), xlab="",
ylab="", main="Weird Function", sub="with log scales",
colorkey = FALSE, region = TRUE)
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
panel.abline(v = 2.5)
panel.abline(v = 2.5)
panel.abline(h = 2.5)
panel.abline(h = 200.5)
x <- seq(pi/4, 5 * pi, length.out = 100)
y <- seq(pi/4, 5 * pi, length.out = 100)
r <- as.vector(sqrt(outer(x^2, y^2, "+")))
grid <- expand.grid(x=x, y=y)
grid$z <- cos(r^2) * exp(-r/(pi^3))
levelplot(z~x*y, grid,
panel = function(...){
panel.levelplot(...)
panel.abline(h = 2.5)
panel.abline(v = 2.5)
},
cuts = 50, scales=list(log="e"), xlab="",
ylab="", main="Weird Function", sub="with log scales",
colorkey = FALSE, region = TRUE)
showLR <- function(X,Y){
#library("lattice")
dat <- data.frame( x=X, y=Y, gp=1 )
xyplot( y ~ x, dat, group=gp, type='b',panel.abline(h = 200.5) )
}
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
showLR <- function(X,Y){
#library("lattice")
dat <- data.frame( x=X, y=Y, gp=1 )
xyplot( y ~ x, panel = function( x,y,...) {
panel.abline( h=y[ which(x==0.5) ], lty = "dotted", col = "black")
panel.xyplot( x,y,...), group=gp, type='b)
}
showLR <- function(X,Y){
#library("lattice")
dat <- data.frame( x=X, y=Y, gp=1 )
xyplot( y ~ x,panel = function( x,y,...) {
panel.abline( h=y[ which(x==0.5) ], lty = "dotted", col = "black")
panel.xyplot( x,y,...) , group=gp, type='b)
}
showLR <- function(X,Y){
#library("lattice")
dat <- data.frame( x=X, y=Y, gp=1 )
xyplot( y ~ x, dat, group=gp, type='b')
}
showLR <- function(X,Y){
#library("lattice")
dat <- data.frame( x=X, y=Y, gp=1 )
xyplot( y ~ x, dat, group=gp, type='b', panel = abline(v=20,col = "red"))
}
#preparing the dataset
#X = rpois(10000, 12.4577)
#dat <- data.frame( x=rep(1:51), y=result[1:50], gp=1 )
#xyplot( y ~ x, dat, group=gp, type='b' )
res <- read.xlsx("G:/диплом/carcinoma.xlsx", 2,colIndex=c(2,5,6)) # read the second sheet
I = seq(119, 2023, by = 119)
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
showLR <- function(X,Y){
#library("lattice")
dat <- data.frame( x=X, y=Y, gp=1 )
xyplot( y ~ x, dat, group=gp, type='b', panel = panel.abline(v=20,col = "red"))
}
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
showLR <- function(X,Y){
#library("lattice")
dat <- data.frame( x=X, y=Y, gp=1 )
xyplot( y ~ x, dat, group=gp, type='b',
panel =
function(...) {
panel.abline(a = 2, b = .5, lty = 1,  from = 1, to = 8) }  )
}
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
showLR <- function(X,Y){
#library("lattice")
dat <- data.frame( x=X, y=Y, gp=1 )
xyplot( y ~ x, dat, group=gp, type='b',
panel =
function(...) {
panel.abline(a = 2, b = .5, lty = 1,  from = 1, to = 8)
panel.abline(a = 3.5, b = .6, lty = 3, from = 1, to = 8)
panel.abline(a = 1, b = .4, lty = 4, from = 1, to = 8)
panel.xyplot(...)  }  )
}
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
showLR <- function(X,Y){
#library("lattice")
dat <- data.frame( x=X, y=Y, gp=1 )
xyplot( y ~ x, dat, group=gp, type='b',
panel =
function(...) {
panel.abline(h = 3.628123, col = "red")
panel.xyplot(...)  }  )
}
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
#MaxSPRT algo
MaxSPRT <- function(c,mu, I){
N = length(I)
result <- rep(0,17)
years <- seq(1,17,1)
z =  (mu[I[i]]/10000 - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/10000))
print (z )#
result[i] <- z
while(i < N){
i = i + 1
z = z + (mu[I[i]]/10000 - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/10000))
result[i] <- z
print (result[i])#
}
return(result)
}
shiny::runApp()
#MaxSPRT algo
MaxSPRT <- function(c,mu, I){
N = length(I)
result <- rep(0,17)
years <- seq(1,17,1)
z =  (mu[I[i]]/100000 - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/100000))
print (z )#
result[i] <- z
while(i < N){
i = i + 1
z = z + (mu[I[i]]/100000 - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/100000))
result[i] <- z
print (result[i])#
}
return(result)
}
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
shiny::runApp()
#MaxSPRT algo
MaxSPRT <- function(c,mu, I){
N = length(I)
result <- rep(0,17)
years <- seq(1,17,1)
z =  (mu[I[i]]/10000000 - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/10000000))
print (z )#
result[i] <- z
while(i < N){
i = i + 1
z = z + (mu[I[i]]/10000000 - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/10000000))
result[i] <- z
print (result[i])#
}
return(result)
}
#MaxSPRT algo
MaxSPRT <- function(c,mu, I){
N = length(I)
result <- rep(0,17)
years <- seq(1,17,1)
z =  (mu[I[i]]/10000000 - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/10000000))
print (z )#
result[i] <- z
while(i < N){
i = i + 1
z = z + (mu[I[i]]/10000000 - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/10000000))
result[i] <- z
print (result[i])#
}
return(result)
}
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
#MaxSPRT algo
MaxSPRT <- function(c,mu, I){
N = length(I)
result <- rep(0,17)
years <- seq(1,17,1)
z =  (mu[I[i]]/0.10000000 - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/0.10000000))
print (z )#
result[i] <- z
while(i < N){
i = i + 1
z = z + (mu[I[i]]/0.10000000 - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/0.10000000))
result[i] <- z
print (result[i])#
}
return(result)
}
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
#MaxSPRT algo
MaxSPRT <- function(c,mu, I){
N = length(I)
result <- rep(0,17)
years <- seq(1,17,1)
z =  (mu[I[i]]/years[i] - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/years[i]))
print (z )#
result[i] <- z
while(i < N){
i = i + 1
z = z + (mu[I[i]]/years[i] - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/years[i]))
result[i] <- z
print (result[i])#
}
return(result)
}
shiny::runApp()
showLR <- function(X,Y){
#library("lattice")
dat <- data.frame( x=X, y=Y, gp=1 )
xyplot( y ~ x, dat, group=gp, type='b',
panel =
function(...) {
panel.abline(h = 3.628123, col = "red")
panel.xyplot(...)  }  )
}
#MaxSPRT algo
MaxSPRT <- function(c,mu, I){
N = length(I)
result <- rep(0,17)
years <- seq(1,17,1)
z =  (mu[I[i]]/years[i] - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/years[i]))
print (z )#
result[i] <- z
while(i < N){
i = i + 1
z = z + (mu[I[i]]/years[i] - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/years[i]))
result[i] <- z
print (result[i])#
}
return(result)
}
shiny::runApp()
# server.R
library (shiny)
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
shinyServer(
function(input, output) {
output$plot1 <- renderPlot(showLR(c(1:17),result[1:17]))
}
)
shiny::runApp()
shiny::runApp()
#MaxSPRT algo
MaxSPRT <- function(c,mu, I){
N = length(I)
result <- rep(0,17)
years <- seq(1,17,1)
z =  (0.345 - c[I[i]]) + c[I[i]]*log(c[I[i]]/(0.345))
print (z )#
result[i] <- z
while(i < N){
i = i + 1
z = z + (0.345 - c[I[i]]) + c[I[i]]*log(c[I[i]]/(0.345))
result[i] <- z
print (result[i])#
}
return(result)
}
shiny::runApp()
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
#MaxSPRT algo
MaxSPRT <- function(c,mu, I){
N = length(I)
result <- rep(0,17)
years <- seq(1,17,1)
z =  (0.0345 - c[I[i]]) + c[I[i]]*log(c[I[i]]/(0.0345))
print (z )#
result[i] <- z
while(i < N){
i = i + 1
z = z + (0.0345 - c[I[i]]) + c[I[i]]*log(c[I[i]]/(0.0345))
result[i] <- z
print (result[i])#
}
return(result)
}
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
i = 1
result <- MaxSPRT(res[,3,],res[,2,],I)
showLR(c(1:17),result[1:17])
#MaxSPRT algo
MaxSPRT <- function(c,mu, I){
N = length(I)
result <- rep(0,17)
years <- seq(1,17,1)
z =  (mu[I[i]]/years[i] - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/years[i]))
print (z )#
result[i] <- z
while(i < N){
i = i + 1
z = z + (mu[I[i]]/years[i] - c[I[i]]) + c[I[i]]*log(c[I[i]]/(mu[I[i]]/years[i]))
result[i] <- z
print (result[i])#
}
return(result)
}
shiny::runApp()
shiny::runApp()
library("lattice", lib.loc="C:/Program Files/R/R-3.1.1/library")
shiny::runApp()
clusters <- read.xlsx("G:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2))
library("xlsx", lib.loc="C:/Program Files/R/R-3.1.1/library")
clusters <- read.xlsx("G:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2))
clusters
Encoding(Гомель)
Encoding("Гомель")
Encoding("Г")
clusters <- read.xlsx("G:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2),еncoding = "UTF-8")
clusters
clusters <- read.xlsx("G:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2),еncoding = "Windows-1251")
clusters
clusters <- read.xlsx("G:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2),еncoding = "CP12001")
clusters
clusters <- read.xlsx("G:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2))
clusters
clusters <- read.xlsx("G:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2),encoding = "ISO-8859")
clusters
shiny::runApp()
shiny::runApp()
library(lattice)
showLR <- function(X,Y){
#library("lattice")
dat <- data.frame( x=X, y=Y, gp=1 )
xyplot( y ~ x, dat, group=gp, type='b',
panel =
function(...) {
panel.abline(h = 3.628123, col = "red")
panel.xyplot(...)  }  )
}
shiny::runApp()
clusters <- read.xlsx("G:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2))
library("xlsx", lib.loc="I:/R-3.1.1/library")
library("rJava", lib.loc="I:/R-3.1.1/library")
library("xlsxjars", lib.loc="I:/R-3.1.1/library")
detach("package:xlsx", unload=TRUE)
library("xlsx", lib.loc="I:/R-3.1.1/library")
detach("package:xlsx", unload=TRUE)
detach("package:xlsxjars", unload=TRUE)
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="I:/R-3.1.1/library")
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="I:/R-3.1.1/library")
install.packages('rJava',,'http://www.rforge.net/')
library("rJava", lib.loc="I:/R-3.1.1/library")
library("xlsxjars", lib.loc="I:/R-3.1.1/library")
library("xlsx", lib.loc="I:/R-3.1.1/library")
clusters <- read.xlsx("G:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2))
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="I:/R-3.1.1/library")
if (Sys.getenv("JAVA_HOME")!="")
Sys.setenv(JAVA_HOME="")
library(rJava)
Sys.getenv("JAVA_HOME")
library("lattice", lib.loc="I:/R-3.1.1/library")
library("rJava", lib.loc="I:/R-3.1.1/library")
library("xlsxjars", lib.loc="I:/R-3.1.1/library")
library("xtable", lib.loc="I:/R-3.1.1/library")
shiny::runApp()
clusters <- read.xlsx("G:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2))
library("xlsx", lib.loc="I:/R-3.1.1/library")
clusters <- read.xlsx("G:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2))
clusters <- read.xlsx("F:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2))
clusters <- read.xlsx("I:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2))
clusters
clusters <- read.xlsx("I:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2))
clusters
clusters <- read.xlsx("I:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2))
clusters
clusters <- read.xlsx("I:/диплом/carcinoma.xlsx", 1,colIndex=c(1,2))
clusters
clusters[2]
clusters[1]
clusters[1,2]
clusters[1,3]
clusters[1,1]
clusters[1,2]
clusters[2,2]
clusters[3,2]
clusters[1,45]
clusters[1,15]
clusters[12,3]
clusters[12,2]
clusters[12][2]
clusters[12]
clusters[12,]
clusters[,]
clusters[1,]
clusters[1,1]
clusters[1,2]
clusters[1,]
clusters[2,]
clusters[,2]
clusters[,2][2]
print (clusters[,2][2])
x <- print (clusters[,2][2])
x
x <- cluster[,2]
x <- clusters[,2]
x
clusters <- read.csv("I:/диплом/carcinoma.xlsx")
clusters
install.packages("XLConnect")
clusters <- read.csv("I:/диплом/carcinoma.csv")
clusters
res2 <- read.xlsx("G:/диплом/carcinoma.xlsx")
res2 <- read.xls("G:/диплом/carcinoma.xls")
clusters <- read.xls("I:/диплом/carcinoma2.xls")
install.packages("gdata")
clusters <- read.xls("I:/диплом/carcinoma2.xls")
library("gdata", lib.loc="I:/R-3.1.1/library")
clusters <- read.xls("I:/диплом/carcinoma2.xls")
clusters
XLConnect
install.packages("XLConnect")
d = read.table("carcinoma3.txt",
sep=" \t\n",
col.names=c("id", "name"),
fill=FALSE,
strip.white=TRUE)
d = read.table("I:/диплом/carcinoma3.txt",
sep=" \t\n",
col.names=c("id", "name"),
fill=FALSE,
strip.white=TRUE)
d = read.table("I:/диплом/carcinoma3.txt",
sep="\n",
col.names=c("id", "name"),
fill=FALSE,
strip.white=TRUE)
d = read.table("I:/диплом/carcinoma3.txt",
sep="\t",
col.names=c("id", "name"),
fill=FALSE,
strip.white=TRUE)
d = read.table("I:/диплом/carcinoma3.txt",
sep="\t",
col.names=c("id", "name"),
fill=FALSE)
d = read.table("I:/диплом/carcinoma3.txt",
sep="\t",
fill=FALSE)
d
d = read.table("I:/диплом/carcinoma3.txt",
sep="\t",
col.names=c("id", "name"),
fill=FALSE)
shiny::runApp()
library("gdata", lib.loc="I:/R-3.1.1/library")
detach("package:gdata", unload=TRUE)
library("lattice", lib.loc="I:/R-3.1.1/library")
shiny::runApp()
